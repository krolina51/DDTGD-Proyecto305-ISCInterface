package postilion.realtime.iscinterface;

import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.CharacterCodingException;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CharsetEncoder;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import postilion.realtime.iscinterface.message.ISCResMessage;
import postilion.realtime.iscinterface.message.ISCReqMessage.Constants;
import postilion.realtime.iscinterface.util.Logger;
import postilion.realtime.iscinterface.util.Utils;
import postilion.realtime.sdk.message.bitmap.Iso8583;
import postilion.realtime.sdk.message.bitmap.StructuredData;
import postilion.realtime.sdk.message.stream.XStreamBase;
import postilion.realtime.sdk.util.convert.Pack;
import postilion.realtime.sdk.util.convert.Transform;

public class Test {
	
	public static void main(String[] args) throws XStreamBase, UnsupportedEncodingException {
		
		
		Pattern p = Pattern.compile("\\w{2}(\\d{4})(.)[A-Z]{1}:(.)");
		String o
		String s = Transform.fromEbcdicToAscii(Transform.fromHexToBin(o));
		Matcher m = p.matcher(s);
		int i = 0;
		while (m.find()) {
		    System.out.println(i+"::"+m.group(1));
		    i++;
		}
		
		
		String b = new String
		//String c = convertControlChars(b);
		System.out.println("###-->" + Transform.fromEbcdicToAscii(Transform.fromHexToBin(b)));
		System.out.println("###-->" + Transform.fromHexToBin(Transform.fromEbcdicToAscii(b)));
		System.out.println("###-->" + Utils.ebcdicToAscii(b));
		System.out.println("###-->" + Utils.ebcdicToAscii(b));
		
		//String a = "008E3132333435361140401D60E5C9C2C1F1F0C1E3F0F240404040F2F1F4F0F0F0F0F0F0F0F0F0F0F0F0F0F00086404040404040404011C2601D60D4C5E2E2C1C7C5E240C6D6D940D9C5E3C9D9D640C1E3D440F0F2F9F9F0F4F5F2F7F811C2601D60C9D4F8F040E3E2F5F2F8F040C67A40C5E7C3C5C4C540D3C9D4C9E3C540E3D94BC4C9C1D9C9C1E26040C8D6E8";
		String a = "313233343536";
		
		System.out.println("Processing message from interchange! ISC");
		byte[] dataAscii = Transform.fromEbcdicDataToAsciiData(Transform.getData(a, Transform.Encoding.EBCDIC));
		System.out.println("###-->" + Transform.getString(dataAscii, Transform.Encoding.ASCII));
		
		ISCResMessage rspISCMsg = new ISCResMessage();
		rspISCMsg.fromMsg(dataAscii);
		System.out.println("[MSG][ISC] \n" + rspISCMsg.toString());
		
		String z = "450942hghghg";
		System.out.println(z.substring(0, 6));
		
		
		System.out.println(Utils.ebcdicToAscii(rspISCMsg.getField(ISCResMessage.Fields._VARIABLE_BODY)));
		
	}
	
    public static String Convert (String strToConvert,String in, String out){
        try {

         Charset charset_in = Charset.forName(out);
         Charset charset_out = Charset.forName(in);

         CharsetDecoder decoder = charset_out.newDecoder();

         CharsetEncoder encoder = charset_in.newEncoder();

         CharBuffer uCharBuffer = CharBuffer.wrap(strToConvert);

         ByteBuffer bbuf = encoder.encode(uCharBuffer);

         CharBuffer cbuf = decoder.decode(bbuf);

         String s = cbuf.toString();

         //System.out.println("Original String is: " + s);
         return s;

     } catch (CharacterCodingException e) {

         //System.out.println("Character Coding Error: " + e.getMessage());
         return "";

     }
        
    }
    
    private static String convertControlChars(String input) {
    	String output = "";
    	for(int i = 0; i < input.length(); ) {
    		
    		String hexByte = input.substring(i, i + 2);
    		switch (hexByte) {
			case "11":
				hexByte = "4B";
				break;
			default:
				hexByte = hexByte;
				break;
			}
    		output += hexByte;
    		i += 2;
    	}
    	System.out.println(output);
    	return output;
    }
    
    public final static String EBCDIC_1 = "CP1047";
    public final static String EBCDIC_2 = "CP1140";
    public final static String EBCDIC_3 = "CP1141";
    public final static String EBCDIC_4 = "CP1143";
    public final static String ASCII = "ISO-8859-1";
}
